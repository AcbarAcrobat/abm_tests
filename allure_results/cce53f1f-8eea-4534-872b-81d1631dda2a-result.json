{"name": "Post request with incorrect values", "status": "failed", "statusDetails": {"message": "truth.truth.TruthAssertionError: Not true that <400> is equal to <401>.", "trace": "@allure.parent_suite(\"NEGATIVE\")\n    @allure.sub_suite(\"/user/id\")\n    @allure.title(\"Post request with incorrect values\")\n    def test_post_user_by_id_and_correct_token_max_int():\n        with allure.step(\"Send request to the server with correct token and incorrect id\"):\n            r = requests.post(T.url() + \"/user/id\", json={\"token\": H.tok3n(),\n                                                          \"id\": 9223372036854775807})\n        with allure.step(\"Assert status code is 401\"):\n>           AssertThat(r.status_code).IsEqualTo(401)\n\ntests/test_post_user_by_incorrect_id_and_valid_token.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv/lib/python3.7/site-packages/truth/truth.py:437: in IsEqualTo\n    self._FailComparingValues('is equal to', other, suffix=suffix)\nvenv/lib/python3.7/site-packages/truth/truth.py:397: in _FailComparingValues\n    self._FailWithProposition('{0} <{1!r}>'.format(verb, other), suffix=suffix)\nvenv/lib/python3.7/site-packages/truth/truth.py:407: in _FailWithProposition\n    .format(self._GetSubject(), proposition, suffix))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <truth.truth._NumericSubject object at 0x7fda12c16310>, msg = 'Not true that <400> is equal to <401>.'\n\n    def _Fail(self, msg):\n      \"\"\"Fail unconditionally.\n    \n      Args:\n        msg: string to include in the exception.\n    \n      Raises:\n        TruthAssertionError: always, by design.\n      \"\"\"\n>     raise TruthAssertionError(msg)\nE     truth.truth.TruthAssertionError: Not true that <400> is equal to <401>.\n\nvenv/lib/python3.7/site-packages/truth/truth.py:421: TruthAssertionError"}, "steps": [{"name": "Send request to the server with correct token and incorrect id", "status": "passed", "start": 1582717765067, "stop": 1582717765130}, {"name": "Assert status code is 401", "status": "failed", "statusDetails": {"message": "truth.truth.TruthAssertionError: Not true that <400> is equal to <401>.\n", "trace": "  File \"/home/tester/work/abm_tests/tests/test_post_user_by_incorrect_id_and_valid_token.py\", line 19, in test_post_user_by_id_and_correct_token_max_int\n    AssertThat(r.status_code).IsEqualTo(401)\n  File \"/home/tester/work/abm_tests/venv/lib/python3.7/site-packages/truth/truth.py\", line 437, in IsEqualTo\n    self._FailComparingValues('is equal to', other, suffix=suffix)\n  File \"/home/tester/work/abm_tests/venv/lib/python3.7/site-packages/truth/truth.py\", line 397, in _FailComparingValues\n    self._FailWithProposition('{0} <{1!r}>'.format(verb, other), suffix=suffix)\n  File \"/home/tester/work/abm_tests/venv/lib/python3.7/site-packages/truth/truth.py\", line 407, in _FailWithProposition\n    .format(self._GetSubject(), proposition, suffix))\n  File \"/home/tester/work/abm_tests/venv/lib/python3.7/site-packages/truth/truth.py\", line 421, in _Fail\n    raise TruthAssertionError(msg)\n"}, "start": 1582717765130, "stop": 1582717765134}], "start": 1582717765066, "stop": 1582717765135, "uuid": "f2656116-c877-437e-b10b-d135f7e3366e", "historyId": "926084010eebc8b949d0ff7ed741324e", "testCaseId": "e490eaf5392adc69cc033283453c0973", "fullName": "tests.test_post_user_by_incorrect_id_and_valid_token#test_post_user_by_id_and_correct_token_max_int", "labels": [{"name": "parentSuite", "value": "NEGATIVE"}, {"name": "subSuite", "value": "/user/id"}, {"name": "suite", "value": "test_post_user_by_incorrect_id_and_valid_token"}, {"name": "host", "value": "artlv.abm.ru"}, {"name": "thread", "value": "2424-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_post_user_by_incorrect_id_and_valid_token"}]}